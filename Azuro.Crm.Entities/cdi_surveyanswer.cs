//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Azuro.Crm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public enum cdi_surveyanswerState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("cdi_surveyanswer")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class cdi_surveyanswer : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string cdi_AccountId = "cdi_accountid";
			public const string cdi_AnonymousVisitorId = "cdi_anonymousvisitorid";
			public const string cdi_ContactId = "cdi_contactid";
			public const string cdi_FieldId = "cdi_fieldid";
			public const string cdi_incidentid = "cdi_incidentid";
			public const string cdi_LeadId = "cdi_leadid";
			public const string cdi_PostedSurveyId = "cdi_postedsurveyid";
			public const string cdi_question = "cdi_question";
			public const string cdi_surveyanswerId = "cdi_surveyanswerid";
			public const string Id = "cdi_surveyanswerid";
			public const string cdi_SurveyQuestionId = "cdi_surveyquestionid";
			public const string cdi_Value = "cdi_value";
			public const string cdi_ValueN = "cdi_valuen";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string cdi_account_cdi_surveyanswer = "cdi_account_cdi_surveyanswer";
			public const string cdi_anonymousvisitor_cdi_surveyanswer = "cdi_anonymousvisitor_cdi_surveyanswer";
			public const string cdi_contact_cdi_surveyanswer = "cdi_contact_cdi_surveyanswer";
			public const string cdi_incident_cdi_surveyanswer = "cdi_incident_cdi_surveyanswer";
			public const string cdi_lead_cdi_surveyanswer = "cdi_lead_cdi_surveyanswer";
			public const string cdi_postedsurvey_cdi_surveyanswer = "cdi_postedsurvey_cdi_surveyanswer";
			public const string cdi_surveyquestion_cdi_surveyanswer = "cdi_surveyquestion_cdi_surveyanswer";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public cdi_surveyanswer() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "cdi_surveyanswer";
		
		public const string PrimaryIdAttribute = "cdi_surveyanswerid";
		
		public const string PrimaryNameAttribute = "cdi_question";
		
		public const int EntityTypeCode = 10072;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier for Account associated with Survey Answer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_accountid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_AccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_accountid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_AccountId");
				this.SetAttributeValue("cdi_accountid", value);
				this.OnPropertyChanged("cdi_AccountId");
			}
		}
		
		/// <summary>
		/// Unique identifier for Anonymous Visitor associated with Survey Answer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_anonymousvisitorid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_AnonymousVisitorId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_anonymousvisitorid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_AnonymousVisitorId");
				this.SetAttributeValue("cdi_anonymousvisitorid", value);
				this.OnPropertyChanged("cdi_AnonymousVisitorId");
			}
		}
		
		/// <summary>
		/// Unique identifier for Contact associated with Survey Answer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_contactid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_ContactId");
				this.SetAttributeValue("cdi_contactid", value);
				this.OnPropertyChanged("cdi_ContactId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_fieldid")]
		public string cdi_FieldId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cdi_fieldid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_FieldId");
				this.SetAttributeValue("cdi_fieldid", value);
				this.OnPropertyChanged("cdi_FieldId");
			}
		}
		
		/// <summary>
		/// Unique identifier for Case associated with Survey Answer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_incidentid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_incidentid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_incidentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_incidentid");
				this.SetAttributeValue("cdi_incidentid", value);
				this.OnPropertyChanged("cdi_incidentid");
			}
		}
		
		/// <summary>
		/// Unique identifier for Lead associated with Survey Answer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_leadid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_LeadId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_leadid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_LeadId");
				this.SetAttributeValue("cdi_leadid", value);
				this.OnPropertyChanged("cdi_LeadId");
			}
		}
		
		/// <summary>
		/// Unique identifier for Posted Survey associated with Survey Answer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_postedsurveyid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_PostedSurveyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_postedsurveyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_PostedSurveyId");
				this.SetAttributeValue("cdi_postedsurveyid", value);
				this.OnPropertyChanged("cdi_PostedSurveyId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_question")]
		public string cdi_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cdi_question");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_question");
				this.SetAttributeValue("cdi_question", value);
				this.OnPropertyChanged("cdi_question");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_surveyanswerid")]
		public System.Nullable<System.Guid> cdi_surveyanswerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("cdi_surveyanswerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_surveyanswerId");
				this.SetAttributeValue("cdi_surveyanswerid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("cdi_surveyanswerId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_surveyanswerid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.cdi_surveyanswerId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier for Survey Question associated with Survey Answer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_surveyquestionid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_SurveyQuestionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_surveyquestionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_SurveyQuestionId");
				this.SetAttributeValue("cdi_surveyquestionid", value);
				this.OnPropertyChanged("cdi_SurveyQuestionId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_value")]
		public string cdi_Value
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cdi_value");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_Value");
				this.SetAttributeValue("cdi_value", value);
				this.OnPropertyChanged("cdi_Value");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_valuen")]
		public System.Nullable<int> cdi_ValueN
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cdi_valuen");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_ValueN");
				this.SetAttributeValue("cdi_valuen", value);
				this.OnPropertyChanged("cdi_ValueN");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Survey Answer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Azuro.Crm.Entities.cdi_surveyanswerState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Azuro.Crm.Entities.cdi_surveyanswerState)(System.Enum.ToObject(typeof(Azuro.Crm.Entities.cdi_surveyanswerState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Survey Answer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N cdi_surveyanswer_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_surveyanswer_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.ActivityPointer> cdi_surveyanswer_ActivityPointers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.ActivityPointer>("cdi_surveyanswer_ActivityPointers", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_surveyanswer_ActivityPointers");
				this.SetRelatedEntities<Azuro.Crm.Entities.ActivityPointer>("cdi_surveyanswer_ActivityPointers", null, value);
				this.OnPropertyChanged("cdi_surveyanswer_ActivityPointers");
			}
		}
		
		/// <summary>
		/// 1:N cdi_surveyanswer_cdi_txtmessages
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_surveyanswer_cdi_txtmessages")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.cdi_txtmessage> cdi_surveyanswer_cdi_txtmessages
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.cdi_txtmessage>("cdi_surveyanswer_cdi_txtmessages", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_surveyanswer_cdi_txtmessages");
				this.SetRelatedEntities<Azuro.Crm.Entities.cdi_txtmessage>("cdi_surveyanswer_cdi_txtmessages", null, value);
				this.OnPropertyChanged("cdi_surveyanswer_cdi_txtmessages");
			}
		}
		
		/// <summary>
		/// 1:N cdi_surveyanswer_msdyn_surveyinvites
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_surveyanswer_msdyn_surveyinvites")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.msdyn_surveyinvite> cdi_surveyanswer_msdyn_surveyinvites
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.msdyn_surveyinvite>("cdi_surveyanswer_msdyn_surveyinvites", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_surveyanswer_msdyn_surveyinvites");
				this.SetRelatedEntities<Azuro.Crm.Entities.msdyn_surveyinvite>("cdi_surveyanswer_msdyn_surveyinvites", null, value);
				this.OnPropertyChanged("cdi_surveyanswer_msdyn_surveyinvites");
			}
		}
		
		/// <summary>
		/// N:1 cdi_account_cdi_surveyanswer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_accountid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_account_cdi_surveyanswer")]
		public Azuro.Crm.Entities.Account cdi_account_cdi_surveyanswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.Account>("cdi_account_cdi_surveyanswer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_account_cdi_surveyanswer");
				this.SetRelatedEntity<Azuro.Crm.Entities.Account>("cdi_account_cdi_surveyanswer", null, value);
				this.OnPropertyChanged("cdi_account_cdi_surveyanswer");
			}
		}
		
		/// <summary>
		/// N:1 cdi_anonymousvisitor_cdi_surveyanswer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_anonymousvisitorid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_anonymousvisitor_cdi_surveyanswer")]
		public Azuro.Crm.Entities.cdi_anonymousvisitor cdi_anonymousvisitor_cdi_surveyanswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.cdi_anonymousvisitor>("cdi_anonymousvisitor_cdi_surveyanswer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_anonymousvisitor_cdi_surveyanswer");
				this.SetRelatedEntity<Azuro.Crm.Entities.cdi_anonymousvisitor>("cdi_anonymousvisitor_cdi_surveyanswer", null, value);
				this.OnPropertyChanged("cdi_anonymousvisitor_cdi_surveyanswer");
			}
		}
		
		/// <summary>
		/// N:1 cdi_contact_cdi_surveyanswer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_contactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_contact_cdi_surveyanswer")]
		public Azuro.Crm.Entities.Contact cdi_contact_cdi_surveyanswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.Contact>("cdi_contact_cdi_surveyanswer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_contact_cdi_surveyanswer");
				this.SetRelatedEntity<Azuro.Crm.Entities.Contact>("cdi_contact_cdi_surveyanswer", null, value);
				this.OnPropertyChanged("cdi_contact_cdi_surveyanswer");
			}
		}
		
		/// <summary>
		/// N:1 cdi_incident_cdi_surveyanswer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_incidentid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_incident_cdi_surveyanswer")]
		public Azuro.Crm.Entities.Incident cdi_incident_cdi_surveyanswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.Incident>("cdi_incident_cdi_surveyanswer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_incident_cdi_surveyanswer");
				this.SetRelatedEntity<Azuro.Crm.Entities.Incident>("cdi_incident_cdi_surveyanswer", null, value);
				this.OnPropertyChanged("cdi_incident_cdi_surveyanswer");
			}
		}
		
		/// <summary>
		/// N:1 cdi_lead_cdi_surveyanswer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_leadid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_lead_cdi_surveyanswer")]
		public Azuro.Crm.Entities.Lead cdi_lead_cdi_surveyanswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.Lead>("cdi_lead_cdi_surveyanswer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_lead_cdi_surveyanswer");
				this.SetRelatedEntity<Azuro.Crm.Entities.Lead>("cdi_lead_cdi_surveyanswer", null, value);
				this.OnPropertyChanged("cdi_lead_cdi_surveyanswer");
			}
		}
		
		/// <summary>
		/// N:1 cdi_postedsurvey_cdi_surveyanswer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_postedsurveyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_postedsurvey_cdi_surveyanswer")]
		public Azuro.Crm.Entities.cdi_postedsurvey cdi_postedsurvey_cdi_surveyanswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.cdi_postedsurvey>("cdi_postedsurvey_cdi_surveyanswer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_postedsurvey_cdi_surveyanswer");
				this.SetRelatedEntity<Azuro.Crm.Entities.cdi_postedsurvey>("cdi_postedsurvey_cdi_surveyanswer", null, value);
				this.OnPropertyChanged("cdi_postedsurvey_cdi_surveyanswer");
			}
		}
		
		/// <summary>
		/// N:1 cdi_surveyquestion_cdi_surveyanswer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_surveyquestionid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_surveyquestion_cdi_surveyanswer")]
		public Azuro.Crm.Entities.cdi_surveyquestion cdi_surveyquestion_cdi_surveyanswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.cdi_surveyquestion>("cdi_surveyquestion_cdi_surveyanswer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_surveyquestion_cdi_surveyanswer");
				this.SetRelatedEntity<Azuro.Crm.Entities.cdi_surveyquestion>("cdi_surveyquestion_cdi_surveyanswer", null, value);
				this.OnPropertyChanged("cdi_surveyquestion_cdi_surveyanswer");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public cdi_surveyanswer(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["cdi_surveyanswerid"] = base.Id;
                        break;
                    case "cdi_surveyanswerid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual cdi_surveyanswer_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((cdi_surveyanswer_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}