//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Azuro.Crm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public enum ListState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Group of existing or potential customers created for a marketing campaign or other sales purposes.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("list")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class List : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string cdi_marketinglistsforattachid = "cdi_marketinglistsforattachid";
			public const string cdi_marketinglistsfordetachid = "cdi_marketinglistsfordetachid";
			public const string cdi_SubscriptionListId = "cdi_subscriptionlistid";
			public const string Cost = "cost";
			public const string Cost_Base = "cost_base";
			public const string CreatedBy = "createdby";
			public const string CreatedFromCode = "createdfromcode";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Description = "description";
			public const string DoNotSendOnOptOut = "donotsendonoptout";
			public const string ExchangeRate = "exchangerate";
			public const string IgnoreInactiveListMembers = "ignoreinactivelistmembers";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string LastUsedOn = "lastusedon";
			public const string ListId = "listid";
			public const string Id = "listid";
			public const string ListName = "listname";
			public const string LockStatus = "lockstatus";
			public const string MemberCount = "membercount";
			public const string MemberType = "membertype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ProcessId = "processid";
			public const string Purpose = "purpose";
			public const string Query = "query";
			public const string Source = "source";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string Type = "type";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string cdi_MarketingListsForAttach = "cdi_MarketingListsForAttach";
			public const string cdi_MarketingListsForDetach = "cdi_MarketingListsForDetach";
			public const string cdi_subscriptionlist_list = "cdi_subscriptionlist_list";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public List() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "list";
		
		public const string PrimaryIdAttribute = "listid";
		
		public const string PrimaryNameAttribute = "listname";
		
		public const int EntityTypeCode = 4300;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier for ClickDimensions Import associated with Marketing List.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_marketinglistsforattachid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_marketinglistsforattachid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_marketinglistsforattachid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_marketinglistsforattachid");
				this.SetAttributeValue("cdi_marketinglistsforattachid", value);
				this.OnPropertyChanged("cdi_marketinglistsforattachid");
			}
		}
		
		/// <summary>
		/// Unique identifier for ClickDimensions Import associated with Marketing List.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_marketinglistsfordetachid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_marketinglistsfordetachid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_marketinglistsfordetachid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_marketinglistsfordetachid");
				this.SetAttributeValue("cdi_marketinglistsfordetachid", value);
				this.OnPropertyChanged("cdi_marketinglistsfordetachid");
			}
		}
		
		/// <summary>
		/// Unique identifier for Subscription List associated with Marketing List.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_subscriptionlistid")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_SubscriptionListId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_subscriptionlistid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_SubscriptionListId");
				this.SetAttributeValue("cdi_subscriptionlistid", value);
				this.OnPropertyChanged("cdi_SubscriptionListId");
			}
		}
		
		/// <summary>
		/// Type the cost of obtaining the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cost")]
		public Microsoft.Xrm.Sdk.Money Cost
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cost");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Cost");
				this.SetAttributeValue("cost", value);
				this.OnPropertyChanged("Cost");
			}
		}
		
		/// <summary>
		/// Shows the Cost field converted to the system's default base currency for reporting purposes. The calculation uses the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cost_base")]
		public Microsoft.Xrm.Sdk.Money Cost_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cost_base");
			}
		}
		
		/// <summary>
		/// lk_list_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Select the type of members that this marketing list will contain: accounts, contacts, or leads. Each list can have only one member type and this value can't be changed after the marketing list is created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdfromcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue CreatedFromCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("createdfromcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedFromCode");
				this.SetAttributeValue("createdfromcode", value);
				this.OnPropertyChanged("CreatedFromCode");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// lk_list_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the marketing list, such as the intended use or date of the last update.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Select whether to override the opt-out settings on leads, contacts, and accounts for the members of the target marketing lists of the campaign activity. If No is selected, those who have chosen to opt out won't be excluded from the list. This means they will receive marketing materials.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendonoptout")]
		public System.Nullable<bool> DoNotSendOnOptOut
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotsendonoptout");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DoNotSendOnOptOut");
				this.SetAttributeValue("donotsendonoptout", value);
				this.OnPropertyChanged("DoNotSendOnOptOut");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Select whether inactive accounts, contacts, or leads should be excluded from the campaign activity distribution when the marketing list is included in a campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreinactivelistmembers")]
		public System.Nullable<bool> IgnoreInactiveListMembers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ignoreinactivelistmembers");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IgnoreInactiveListMembers");
				this.SetAttributeValue("ignoreinactivelistmembers", value);
				this.OnPropertyChanged("IgnoreInactiveListMembers");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the marketing list was last used in a campaign or in the creation of activities or opportunities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedon")]
		public System.Nullable<System.DateTime> LastUsedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastusedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastUsedOn");
				this.SetAttributeValue("lastusedon", value);
				this.OnPropertyChanged("LastUsedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("listid")]
		public System.Nullable<System.Guid> ListId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("listid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ListId");
				this.SetAttributeValue("listid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ListId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("listid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ListId = value;
			}
		}
		
		/// <summary>
		/// Type a name for the marketing list so that it is identified correctly in lists.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("listname")]
		public string ListName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("listname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ListName");
				this.SetAttributeValue("listname", value);
				this.OnPropertyChanged("ListName");
			}
		}
		
		/// <summary>
		/// Select whether the marketing list is locked. If Yes is selected, no additional members can be added to the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lockstatus")]
		public System.Nullable<bool> LockStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("lockstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LockStatus");
				this.SetAttributeValue("lockstatus", value);
				this.OnPropertyChanged("LockStatus");
			}
		}
		
		/// <summary>
		/// Shows the sum of all members in the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membercount")]
		public System.Nullable<int> MemberCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("membercount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MemberCount");
				this.SetAttributeValue("membercount", value);
				this.OnPropertyChanged("MemberCount");
			}
		}
		
		/// <summary>
		/// Type of the members that can be stored in the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membertype")]
		public System.Nullable<int> MemberType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("membertype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MemberType");
				this.SetAttributeValue("membertype", value);
				this.OnPropertyChanged("MemberType");
			}
		}
		
		/// <summary>
		/// lk_list_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// lk_list_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// owner_lists
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// business_unit_list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// team_list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// user_list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Type the intended use of the marketing list to identify its key segments, target offers, or business group.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("purpose")]
		public string Purpose
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("purpose");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Purpose");
				this.SetAttributeValue("purpose", value);
				this.OnPropertyChanged("Purpose");
			}
		}
		
		/// <summary>
		/// Query used for retrieving members of marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("query")]
		public string Query
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("query");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Query");
				this.SetAttributeValue("query", value);
				this.OnPropertyChanged("Query");
			}
		}
		
		/// <summary>
		/// Type the source of the marketing list, such as a third-party supplier or internal database.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("source")]
		public string Source
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("source");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Source");
				this.SetAttributeValue("source", value);
				this.OnPropertyChanged("Source");
			}
		}
		
		/// <summary>
		/// processstage_lists
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Shows whether the marketing list is active or inactive. Inactive marketing lists are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Azuro.Crm.Entities.ListState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Azuro.Crm.Entities.ListState)(System.Enum.ToObject(typeof(Azuro.Crm.Entities.ListState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the marketing list's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// transactioncurrency_list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Select whether you want the marketing list to be static or dynamic. The members in a static marketing list are unchanging. A dynamic marketing list is based on a dynamic query that retrieves the updated list of members
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("type")]
		public System.Nullable<bool> Type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("type");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Type");
				this.SetAttributeValue("type", value);
				this.OnPropertyChanged("Type");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the marketing list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:N campaignactivitylist_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivitylist_association")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.CampaignActivity> campaignactivitylist_association
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.CampaignActivity>("campaignactivitylist_association", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("campaignactivitylist_association");
				this.SetRelatedEntities<Azuro.Crm.Entities.CampaignActivity>("campaignactivitylist_association", null, value);
				this.OnPropertyChanged("campaignactivitylist_association");
			}
		}
		
		/// <summary>
		/// N:N campaignlist_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignlist_association")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.Campaign> campaignlist_association
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.Campaign>("campaignlist_association", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("campaignlist_association");
				this.SetRelatedEntities<Azuro.Crm.Entities.Campaign>("campaignlist_association", null, value);
				this.OnPropertyChanged("campaignlist_association");
			}
		}
		
		/// <summary>
		/// N:N cdi_bulktxtmessage_list
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_bulktxtmessage_list")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.cdi_bulktxtmessage> cdi_bulktxtmessage_list
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.cdi_bulktxtmessage>("cdi_bulktxtmessage_list", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_bulktxtmessage_list");
				this.SetRelatedEntities<Azuro.Crm.Entities.cdi_bulktxtmessage>("cdi_bulktxtmessage_list", null, value);
				this.OnPropertyChanged("cdi_bulktxtmessage_list");
			}
		}
		
		/// <summary>
		/// N:N cdi_cdi_datasync_list
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_cdi_datasync_list")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.cdi_datasync> cdi_cdi_datasync_list
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.cdi_datasync>("cdi_cdi_datasync_list", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_cdi_datasync_list");
				this.SetRelatedEntities<Azuro.Crm.Entities.cdi_datasync>("cdi_cdi_datasync_list", null, value);
				this.OnPropertyChanged("cdi_cdi_datasync_list");
			}
		}
		
		/// <summary>
		/// N:N cdi_emailsend_list
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_emailsend_list")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.cdi_emailsend> cdi_emailsend_list
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.cdi_emailsend>("cdi_emailsend_list", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_emailsend_list");
				this.SetRelatedEntities<Azuro.Crm.Entities.cdi_emailsend>("cdi_emailsend_list", null, value);
				this.OnPropertyChanged("cdi_emailsend_list");
			}
		}
		
		/// <summary>
		/// N:N cdi_emailsend_suppressed_list
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_emailsend_suppressed_list")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.cdi_emailsend> cdi_emailsend_suppressed_list
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.cdi_emailsend>("cdi_emailsend_suppressed_list", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_emailsend_suppressed_list");
				this.SetRelatedEntities<Azuro.Crm.Entities.cdi_emailsend>("cdi_emailsend_suppressed_list", null, value);
				this.OnPropertyChanged("cdi_emailsend_suppressed_list");
			}
		}
		
		/// <summary>
		/// N:N listaccount_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("listaccount_association")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.Account> listaccount_association
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.Account>("listaccount_association", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("listaccount_association");
				this.SetRelatedEntities<Azuro.Crm.Entities.Account>("listaccount_association", null, value);
				this.OnPropertyChanged("listaccount_association");
			}
		}
		
		/// <summary>
		/// N:N listcontact_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("listcontact_association")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.Contact> listcontact_association
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.Contact>("listcontact_association", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("listcontact_association");
				this.SetRelatedEntities<Azuro.Crm.Entities.Contact>("listcontact_association", null, value);
				this.OnPropertyChanged("listcontact_association");
			}
		}
		
		/// <summary>
		/// N:N listlead_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("listlead_association")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.Lead> listlead_association
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.Lead>("listlead_association", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("listlead_association");
				this.SetRelatedEntities<Azuro.Crm.Entities.Lead>("listlead_association", null, value);
				this.OnPropertyChanged("listlead_association");
			}
		}
		
		/// <summary>
		/// N:1 cdi_MarketingListsForAttach
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_marketinglistsforattachid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_MarketingListsForAttach")]
		public Azuro.Crm.Entities.cdi_import cdi_MarketingListsForAttach
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.cdi_import>("cdi_MarketingListsForAttach", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_MarketingListsForAttach");
				this.SetRelatedEntity<Azuro.Crm.Entities.cdi_import>("cdi_MarketingListsForAttach", null, value);
				this.OnPropertyChanged("cdi_MarketingListsForAttach");
			}
		}
		
		/// <summary>
		/// N:1 cdi_MarketingListsForDetach
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_marketinglistsfordetachid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_MarketingListsForDetach")]
		public Azuro.Crm.Entities.cdi_import cdi_MarketingListsForDetach
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.cdi_import>("cdi_MarketingListsForDetach", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_MarketingListsForDetach");
				this.SetRelatedEntity<Azuro.Crm.Entities.cdi_import>("cdi_MarketingListsForDetach", null, value);
				this.OnPropertyChanged("cdi_MarketingListsForDetach");
			}
		}
		
		/// <summary>
		/// N:1 cdi_subscriptionlist_list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_subscriptionlistid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_subscriptionlist_list")]
		public Azuro.Crm.Entities.cdi_subscriptionlist cdi_subscriptionlist_list
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Azuro.Crm.Entities.cdi_subscriptionlist>("cdi_subscriptionlist_list", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_subscriptionlist_list");
				this.SetRelatedEntity<Azuro.Crm.Entities.cdi_subscriptionlist>("cdi_subscriptionlist_list", null, value);
				this.OnPropertyChanged("cdi_subscriptionlist_list");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public List(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["listid"] = base.Id;
                        break;
                    case "listid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdfromcode")]
		public virtual List_CreatedFromCode? CreatedFromCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((List_CreatedFromCode?)(EntityOptionSetEnum.GetEnum(this, "createdfromcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				CreatedFromCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual List_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((List_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}