//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Azuro.Crm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public enum cdi_importState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("cdi_import")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class cdi_import : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string cdi_addtomarketinglist = "cdi_addtomarketinglist";
			public const string cdi_backupowner = "cdi_backupowner";
			public const string cdi_createeventparticipationrecords = "cdi_createeventparticipationrecords";
			public const string cdi_createnewvisitoras = "cdi_createnewvisitoras";
			public const string cdi_failures = "cdi_failures";
			public const string cdi_importFile = "cdi_importfile";
			public const string cdi_importfinishedon = "cdi_importfinishedon";
			public const string cdi_importId = "cdi_importid";
			public const string Id = "cdi_importid";
			public const string cdi_importstartedon = "cdi_importstartedon";
			public const string cdi_importstatus = "cdi_importstatus";
			public const string cdi_mapping = "cdi_mapping";
			public const string cdi_name = "cdi_name";
			public const string cdi_newrecords = "cdi_newrecords";
			public const string cdi_removefrommarketinglist = "cdi_removefrommarketinglist";
			public const string cdi_totalsuccesses = "cdi_totalsuccesses";
			public const string cdi_updatedcontacts = "cdi_updatedcontacts";
			public const string cdi_updatedleads = "cdi_updatedleads";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public cdi_import() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "cdi_import";
		
		public const string PrimaryIdAttribute = "cdi_importid";
		
		public const string PrimaryNameAttribute = "cdi_name";
		
		public const int EntityTypeCode = 10055;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_addtomarketinglist")]
		public System.Nullable<bool> cdi_addtomarketinglist
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cdi_addtomarketinglist");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_addtomarketinglist");
				this.SetAttributeValue("cdi_addtomarketinglist", value);
				this.OnPropertyChanged("cdi_addtomarketinglist");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_backupowner")]
		public Microsoft.Xrm.Sdk.EntityReference cdi_backupowner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cdi_backupowner");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_backupowner");
				this.SetAttributeValue("cdi_backupowner", value);
				this.OnPropertyChanged("cdi_backupowner");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_createeventparticipationrecords")]
		public System.Nullable<bool> cdi_createeventparticipationrecords
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cdi_createeventparticipationrecords");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_createeventparticipationrecords");
				this.SetAttributeValue("cdi_createeventparticipationrecords", value);
				this.OnPropertyChanged("cdi_createeventparticipationrecords");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_createnewvisitoras")]
		public Microsoft.Xrm.Sdk.OptionSetValue cdi_createnewvisitoras
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cdi_createnewvisitoras");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_createnewvisitoras");
				this.SetAttributeValue("cdi_createnewvisitoras", value);
				this.OnPropertyChanged("cdi_createnewvisitoras");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_failures")]
		public System.Nullable<int> cdi_failures
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cdi_failures");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_failures");
				this.SetAttributeValue("cdi_failures", value);
				this.OnPropertyChanged("cdi_failures");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_importfile")]
		public string cdi_importFile
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cdi_importfile");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_importFile");
				this.SetAttributeValue("cdi_importfile", value);
				this.OnPropertyChanged("cdi_importFile");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_importfinishedon")]
		public System.Nullable<System.DateTime> cdi_importfinishedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("cdi_importfinishedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_importfinishedon");
				this.SetAttributeValue("cdi_importfinishedon", value);
				this.OnPropertyChanged("cdi_importfinishedon");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_importid")]
		public System.Nullable<System.Guid> cdi_importId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("cdi_importid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_importId");
				this.SetAttributeValue("cdi_importid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("cdi_importId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_importid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.cdi_importId = value;
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_importstartedon")]
		public System.Nullable<System.DateTime> cdi_importstartedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("cdi_importstartedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_importstartedon");
				this.SetAttributeValue("cdi_importstartedon", value);
				this.OnPropertyChanged("cdi_importstartedon");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_importstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue cdi_importstatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cdi_importstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_importstatus");
				this.SetAttributeValue("cdi_importstatus", value);
				this.OnPropertyChanged("cdi_importstatus");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_mapping")]
		public Microsoft.Xrm.Sdk.OptionSetValue cdi_mapping
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cdi_mapping");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_mapping");
				this.SetAttributeValue("cdi_mapping", value);
				this.OnPropertyChanged("cdi_mapping");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_name")]
		public string cdi_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cdi_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_name");
				this.SetAttributeValue("cdi_name", value);
				this.OnPropertyChanged("cdi_name");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_newrecords")]
		public System.Nullable<int> cdi_newrecords
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cdi_newrecords");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_newrecords");
				this.SetAttributeValue("cdi_newrecords", value);
				this.OnPropertyChanged("cdi_newrecords");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_removefrommarketinglist")]
		public System.Nullable<bool> cdi_removefrommarketinglist
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cdi_removefrommarketinglist");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_removefrommarketinglist");
				this.SetAttributeValue("cdi_removefrommarketinglist", value);
				this.OnPropertyChanged("cdi_removefrommarketinglist");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_totalsuccesses")]
		public System.Nullable<int> cdi_totalsuccesses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cdi_totalsuccesses");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_totalsuccesses");
				this.SetAttributeValue("cdi_totalsuccesses", value);
				this.OnPropertyChanged("cdi_totalsuccesses");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_updatedcontacts")]
		public System.Nullable<int> cdi_updatedcontacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cdi_updatedcontacts");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_updatedcontacts");
				this.SetAttributeValue("cdi_updatedcontacts", value);
				this.OnPropertyChanged("cdi_updatedcontacts");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_updatedleads")]
		public System.Nullable<int> cdi_updatedleads
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cdi_updatedleads");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_updatedleads");
				this.SetAttributeValue("cdi_updatedleads", value);
				this.OnPropertyChanged("cdi_updatedleads");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the ClickDimensions Import
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Azuro.Crm.Entities.cdi_importState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Azuro.Crm.Entities.cdi_importState)(System.Enum.ToObject(typeof(Azuro.Crm.Entities.cdi_importState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the ClickDimensions Import
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N cdi_eventslist
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_eventslist")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.cdi_event> cdi_eventslist
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.cdi_event>("cdi_eventslist", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_eventslist");
				this.SetRelatedEntities<Azuro.Crm.Entities.cdi_event>("cdi_eventslist", null, value);
				this.OnPropertyChanged("cdi_eventslist");
			}
		}
		
		/// <summary>
		/// 1:N cdi_import_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_import_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.ActivityPointer> cdi_import_ActivityPointers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.ActivityPointer>("cdi_import_ActivityPointers", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_import_ActivityPointers");
				this.SetRelatedEntities<Azuro.Crm.Entities.ActivityPointer>("cdi_import_ActivityPointers", null, value);
				this.OnPropertyChanged("cdi_import_ActivityPointers");
			}
		}
		
		/// <summary>
		/// 1:N cdi_import_cdi_txtmessages
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_import_cdi_txtmessages")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.cdi_txtmessage> cdi_import_cdi_txtmessages
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.cdi_txtmessage>("cdi_import_cdi_txtmessages", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_import_cdi_txtmessages");
				this.SetRelatedEntities<Azuro.Crm.Entities.cdi_txtmessage>("cdi_import_cdi_txtmessages", null, value);
				this.OnPropertyChanged("cdi_import_cdi_txtmessages");
			}
		}
		
		/// <summary>
		/// 1:N cdi_import_msdyn_surveyinvites
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_import_msdyn_surveyinvites")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.msdyn_surveyinvite> cdi_import_msdyn_surveyinvites
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.msdyn_surveyinvite>("cdi_import_msdyn_surveyinvites", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_import_msdyn_surveyinvites");
				this.SetRelatedEntities<Azuro.Crm.Entities.msdyn_surveyinvite>("cdi_import_msdyn_surveyinvites", null, value);
				this.OnPropertyChanged("cdi_import_msdyn_surveyinvites");
			}
		}
		
		/// <summary>
		/// 1:N cdi_importlog_Import
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_importlog_Import")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.cdi_importlog> cdi_importlog_Import
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.cdi_importlog>("cdi_importlog_Import", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_importlog_Import");
				this.SetRelatedEntities<Azuro.Crm.Entities.cdi_importlog>("cdi_importlog_Import", null, value);
				this.OnPropertyChanged("cdi_importlog_Import");
			}
		}
		
		/// <summary>
		/// 1:N cdi_MarketingListsForAttach
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_MarketingListsForAttach")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.List> cdi_MarketingListsForAttach
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.List>("cdi_MarketingListsForAttach", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_MarketingListsForAttach");
				this.SetRelatedEntities<Azuro.Crm.Entities.List>("cdi_MarketingListsForAttach", null, value);
				this.OnPropertyChanged("cdi_MarketingListsForAttach");
			}
		}
		
		/// <summary>
		/// 1:N cdi_MarketingListsForDetach
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cdi_MarketingListsForDetach")]
		public System.Collections.Generic.IEnumerable<Azuro.Crm.Entities.List> cdi_MarketingListsForDetach
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Azuro.Crm.Entities.List>("cdi_MarketingListsForDetach", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cdi_MarketingListsForDetach");
				this.SetRelatedEntities<Azuro.Crm.Entities.List>("cdi_MarketingListsForDetach", null, value);
				this.OnPropertyChanged("cdi_MarketingListsForDetach");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public cdi_import(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["cdi_importid"] = base.Id;
                        break;
                    case "cdi_importid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_createnewvisitoras")]
		public virtual cdi_import_cdi_createnewvisitoras? cdi_createnewvisitorasEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((cdi_import_cdi_createnewvisitoras?)(EntityOptionSetEnum.GetEnum(this, "cdi_createnewvisitoras")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				cdi_createnewvisitoras = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_importstatus")]
		public virtual cdi_import_cdi_importstatus? cdi_importstatusEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((cdi_import_cdi_importstatus?)(EntityOptionSetEnum.GetEnum(this, "cdi_importstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				cdi_importstatus = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdi_mapping")]
		public virtual cdi_import_cdi_mapping? cdi_mappingEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((cdi_import_cdi_mapping?)(EntityOptionSetEnum.GetEnum(this, "cdi_mapping")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				cdi_mapping = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual cdi_import_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((cdi_import_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}